/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.SpielplannerCOM.UI;

import com.SpielplannerCOM.logic.Spielplan;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.nio.file.Files;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.accessibility.Accessible;
import javax.swing.JComponent;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author mazy
 */
public class SpeilplanUI extends javax.swing.JFrame {
    public static File inFile = null;
    public static File outFile = null;
    public static Spielplan spielplan = new Spielplan();

    /**
     * Creates new form SpeilplanUI
     */
    public SpeilplanUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanle = new javax.swing.JPanel();
        lableNotation = new javax.swing.JLabel();
        btnJSONFile = new javax.swing.JButton();
        btnDestinationDir = new javax.swing.JButton();
        lableResultPath = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainPanle.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Spielplanner", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N
        mainPanle.setName("mainPanel"); // NOI18N

        lableNotation.setText("Choose a JSON file as an Input and choose a Text file as an output to save the \"Spielplan\"\n");

        btnJSONFile.setText("JSON File");
        btnJSONFile.setToolTipText("");
        btnJSONFile.setName("JSONFile"); // NOI18N
        btnJSONFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJSONFileActionPerformed(evt);
            }
        });

        btnDestinationDir.setText("Destination File");
        btnDestinationDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDestinationDirActionPerformed(evt);
            }
        });

        jLabel1.setText("When the destination text file is chosen, the League Plan will be build there");

        javax.swing.GroupLayout mainPanleLayout = new javax.swing.GroupLayout(mainPanle);
        mainPanle.setLayout(mainPanleLayout);
        mainPanleLayout.setHorizontalGroup(
            mainPanleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanleLayout.createSequentialGroup()
                .addGroup(mainPanleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanleLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lableResultPath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(mainPanleLayout.createSequentialGroup()
                        .addGroup(mainPanleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPanleLayout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addComponent(btnJSONFile))
                            .addGroup(mainPanleLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(mainPanleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(mainPanleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(btnDestinationDir)
                                        .addComponent(lableNotation))
                                    .addComponent(jLabel1))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        mainPanleLayout.setVerticalGroup(
            mainPanleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lableNotation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(7, 7, 7)
                .addGroup(mainPanleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnJSONFile)
                    .addComponent(btnDestinationDir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(lableResultPath, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        lableNotation.getAccessibleContext().setAccessibleName("Choose a JSON file as an Input and choose a Text file as an output to save the \"Spielplan\"");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(213, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDestinationDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDestinationDirActionPerformed
        // TODO add your handling code here:
        class MyJFileChooser extends JFileChooser {

            @Override
            public void approveSelection() {
                File f = getSelectedFile();
                if (!f.getName().endsWith("txt")) {
                    JOptionPane.showMessageDialog(null, "You chose the wrong file extension ! -  please choose a txt file ");
                } else {
                    super.approveSelection();
                    return;

                }

            }

            @Override
            public void cancelSelection() {
                JOptionPane.showMessageDialog(null, "Please select a Text file :) ");
                super.cancelSelection();
            }
        }
        MyJFileChooser outFileChooser = new MyJFileChooser();
        
        outFileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        outFileChooser.setDialogTitle("Choose a txt file");
        int returnVal = outFileChooser.showOpenDialog(mainPanle);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
                outFile = outFileChooser.getSelectedFile();
                spielplan.setOutFile(outFile);

            } else {
                 System.out.println("Error in reading file");
            }
        spielplan.spielplannerMain();
        lableResultPath.setText("The file is ready in: "+outFile.getPath().toString());
    }//GEN-LAST:event_btnDestinationDirActionPerformed

    private void btnJSONFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJSONFileActionPerformed
        
        class MyJFileChooser extends JFileChooser {

            @Override
            public void approveSelection() {
                File f = getSelectedFile();
                if (!f.getName().endsWith("json")) {
                    JOptionPane.showMessageDialog(null, "You chose the wrong file extension ! -  please choose a JSON file ");
                } else {
                    super.approveSelection();
                    return;
                    
                }
                
            }

            @Override
            public void cancelSelection() {
                JOptionPane.showMessageDialog(null, "Please select a JSON file :) ");
                super.cancelSelection();
            }
        }
        MyJFileChooser inFileChooser = new MyJFileChooser();

        inFileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        inFileChooser.setDialogTitle("Choose a JSON file");
        int returnVal = inFileChooser.showOpenDialog(mainPanle);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
                inFile = inFileChooser.getSelectedFile();
                spielplan.setInFile(inFile);

            } else {
                 System.out.println("Error in reading file");
            }
        
        
    }//GEN-LAST:event_btnJSONFileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SpeilplanUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SpeilplanUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SpeilplanUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SpeilplanUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SpeilplanUI().setVisible(true);
            }
        });
        // Akharesh main spielplan ro run kon
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDestinationDir;
    private javax.swing.JButton btnJSONFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lableNotation;
    private javax.swing.JLabel lableResultPath;
    private javax.swing.JPanel mainPanle;
    // End of variables declaration//GEN-END:variables

}
